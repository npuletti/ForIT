% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/INFCvpeSUM.R
\name{INFCvpeSUM}
\alias{INFCvpeSUM}
\alias{INFCvpe_summarise}
\alias{INFCvpe_sum}
\alias{INFCvpe_ConfInt}
\alias{INFCvpe_OutOfDomain}
\title{Estimate tree bole volume or phytomass for stems groups, with associated accuracy info}
\usage{
INFCvpe_summarise(
  in.data,
  EPPOcode_C,
  dbh_C,
  h_tot_C,
  quantity = "vol",
  p = 0.95
)

INFCvpe_sum(EPPOcode, dbh, h_tot, quantity = "vol")

INFCvpe_ConfInt(EPPOcode, dbh, h_tot, quantity = "vol", p = 0.95)

INFCvpe_OutOfDomain(EPPOcode, dbh, h_tot)
}
\arguments{
\item{in.data}{A dataframe (or tibble) containing tally data to be matched with
"EPPOcode_C", "dbh_C" and "htot_C" arguments}

\item{EPPOcode_C}{A string, the name of the column in \code{in.data} with the
species EPPO codes}

\item{dbh_C}{A string, the name of the column in \code{in.data} with the
brest height diameter values}

\item{h_tot_C}{A string, the name of the column in \code{in.data} with the
tree total height values}

\item{quantity}{(default = \code{"vol"}) A character vector specifying required
quantity/ies: \code{c("vol", "dw1" : "dw4")}.
Use \code{qantities()} to decode definitions.
\itemize{
\item for \code{INFCvpe_summarise()}, if \code{length(unique(quantity)) > 1},
rows in in.data will be replicated for each value.
\item for \code{INFCvpe_SUM functions}, length(quantity) must be 1
}}

\item{p}{(default \code{p = 95\%}) probability used to compute \code{cihw}
(with length = 1 or length = length(dbh))

OPZIONE 2  \code{INFCvpe_SUM functions}:}

\item{EPPOcode}{A character vector with the species EPPO codes
(with length = 1 or length = length(dbh))}

\item{dbh}{A numeric vector with the brest height diameter values}

\item{h_tot}{A numeric vector with the tree total height values
(with length = 1 or length = length(dbh))}
}
\value{
\itemize{
\item \code{INFCvpe_summarise()} returns a dataframe (tibble) with
the grouping columns defined with \code{group_by()}, and the following columns:
\itemize{
\item \code{quantity}: as additional grouping column,
\item \code{n} : number of trees in the group,
\item \code{n_out} : the number of \code{(dbh, htot)} pairs that are 'out of the domain',
\item \code{est} : the estimated value,
\item \code{cihw} : confidence interval half width
\item \code{p}: probability used computing \code{cihw}
}
\item \code{INFCvpe_SUM} - the functions of this family return a numeric vector,
aggregating rows within the same group,
\itemize{
\item \code{INFCvpe_sum()} returns the sum of the estimated quantities,
\item \code{INFCvpe_ConfInt()} returns 'confidence interval half width',
\item \code{INFCvpe_OutOfDomain()} returns the number of 'out of domain'
\code{(dhb, h_tot)} pairs included in the summation
}
}
}
\description{
Cumulative estimation of the volume or phytomass of groups of trees is just
the summation of the values computed with \code{INFCvpe()}, but the computation of
accuracy estimates is improved using these summation functions.\cr
Two approaches are available.
\itemize{
\item Via \code{INFCvpe_summarise()} that processes and returns a data frame
\item or by following aggregation functions within a standard \code{summarise()}:
\itemize{
\item \code{INFCvpe_sum()}
\item \code{INFCvpe_ConfInt()}
\item \code{INFCvpe_OutOfDomain()}
}
}
}
\details{
Functions developed following Tabacchi et al. (2011).
Relevant excerpt are collected in the \strong{INFCvpeSUM_theoryAndExamples.pdf} file.
NOTA: vedi https://trello.com/c/PCaZZFe4)
}
\examples{
tst <- dplyr::tribble(
  ~UC, ~specie, ~d130, ~h_dendro,
  # Example data in Tabacchi et al. (2011) pag. 25
  "U1","ACROP",10,7,
  "U1","ACROP",15,9,
  "U1","ACROP",20,12,
  "U1","ACROP",30,20,
  "U1","ACROP",32,21,
  "U1","ACROP",24,18,
  "U1","ACROP",36,21,
  "U1","ACROP",40,22,
  "U1","ACROP",8,8,
  "U1","ACROP",18,12,

  # Example continuation, pag. 27
  "U2","ABIAL",38,21,
  "U2","ABIAL",52,28,
  "U2","FAUSY",25,16,
  "U2","FAUSY",30,18,
  "U2","FAUSY",12,10,

  # Extra line, to test 'out of domain'
  "U2","ABIAL",5,32)

tst \%>\%
  dplyr::filter(!(d130 == 5 & h_dendro == 32)) \%>\%
  dplyr::group_by(specie) \%>\%
  INFCvpe_summarise("specie", "d130", "h_dendro") \%>\%
  dplyr::ungroup() \%>\%
  dplyr::mutate(specie = factor(specie,
                         levels = c("ACROP", "ABIAL", "FAUSY"),
                         labels = c("aceri", "abete bianco", "faggio"),
                         ordered = TRUE),
                dplyr::across(c("est", "cihw"), ~round(.x, 1))
         ) \%>\%
  dplyr::select(specie, est, cihw) \%>\%
  dplyr::arrange(specie) \%>\%
  t()
# ForIT (ver 2) output
# specie "aceri"  "abete bianco" "faggio"
# est    "4623.0" "4044.2"       "1079.4"
# cihw   "567.5"  "661.2"        "275.4"

# In (Tabacchi et al., 2011, 'Tabella 2')
# specie "aceri"  "abete bianco" "faggio"
# est    "4623.0" "4044.2"       "1079.4"
# cihw   "567.4"  "662.4"        "279.2"

# Using 'INFCvpe_summarise()'
tst \%>\%
  INFCvpe_summarise("specie", "d130", "h_dendro", quantity = c("vol", "dw4"))

tst \%>\%
  dplyr::mutate(cld = ceiling(d130/5)*5) \%>\%
  dplyr::group_by(UC, specie, cld) \%>\%
  INFCvpe_summarise("specie", "d130", "h_dendro")

tst \%>\%
  dplyr::group_by(UC) \%>\%
  INFCvpe_summarise("specie", "d130", "h_dendro", quantity = "dw4")

# Using 'INFCvpeSUM' aggregation functions
tst \%>\%
  dplyr::group_by(UC) \%>\%
  dplyr::summarise(
    n_stems = dplyr::n(),
    OoD = INFCvpe_OutOfDomain(specie, d130, h_dendro),
    dw4 = INFCvpe_sum(specie, d130, h_dendro, quantity = "dw4"),
    dw4_ConfInt = INFCvpe_ConfInt(specie, d130, h_dendro, quantity = "dw4")
  )

tst \%>\%
  dplyr::group_by(UC) \%>\%
  dplyr::summarise(
    n_stems = dplyr::n(),
    OoD = INFCvpe_OutOfDomain(specie, d130, h_dendro),
    vol = INFCvpe_sum(specie, d130, h_dendro),
    vol_ConfInt = INFCvpe_ConfInt(specie, d130, h_dendro)
  )
rm(tst)
}
\seealso{
\code{\link[=INFCvpe]{INFCvpe()}} to compute individual estimates, with detailed accuracy evaluation
}
